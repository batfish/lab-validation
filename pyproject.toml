[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lab-validation"
description = "Lab validation framework for Batfish network analysis"
readme = "README.md"
requires-python = ">=3.10"
license = {file = "LICENSE"}
authors = [
    {name = "Batfish Team"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: System :: Networking",
]
dependencies = [
    "pybatfish>=2022.5.0",
    "attrs>=21.0.0",
    "pandas>=1.3.0",
    "PyYAML>=5.4.0",
    "requests>=2.25.0",
]
version = "0.1.0"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "mypy>=0.900",
    "black>=22.0",
    "pre-commit",
    "sphinx",
    "sphinx-rtd-theme",
]
ansible = [
    "ansible>=2.10.0",
    "paramiko>=2.7.0",
    "netmiko>=3.4.0",
]

[project.urls]
Homepage = "https://github.com/batfish/lab-validation"
Documentation = "https://github.com/batfish/lab-validation#readme"
Repository = "https://github.com/batfish/lab-validation.git"
Issues = "https://github.com/batfish/lab-validation/issues"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]


[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pandas.*",
    "pybatfish.*",
    "pytest.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.ruff]
# Same as Black line length
line-length = 88

# Python version compatibility
target-version = "py310"

[tool.ruff.lint]
# Enable rules that replace the tools we're removing:
# - F: Pyflakes (basic linting)
# - E, W: pycodestyle errors and warnings
# - I: isort (import sorting)
# - UP: pyupgrade (modern Python idioms, but be selective)
select = ["F", "E", "W", "I", "UP031", "UP008"]

# Ignore some rules that might be too strict for existing code
ignore = [
    "E501",  # Line too long (handled by formatter)
    "E741",  # Ambiguous variable name (too restrictive for this codebase)
    "E722",  # Do not use bare except (existing code pattern)
]

[tool.ruff.lint.isort]
# Match the existing isort configuration (black-compatible)
force-single-line = false
combine-as-imports = true
known-first-party = ["lab_validation", "lab_tests"]

[tool.ruff.format]
# Use Black-compatible formatting
quote-style = "double"
indent-style = "space"
